/*!
 * nodeUpload
 * Copyright(c) 2012 Nibs Solution (BD) Ltd. <drubo@nibssolution.com>
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var fs = require('fs'),
	exec = require("child_process").exec;

/**
 * Export the constructor.
 */

exports = module.exports = Common;

/**
 * Inherited defaults.
 */

var parent = module.parent.exports;

function Common(options){
	this.settings = options;
};

Common.prototype.originIsAllowed = function(origin){
	var trustedOrigins = {};
	var trustedOriginsWithPort = this.settings.origins.split('||');
	trustedOriginsWithPort.forEach(function(item){
		var host = item.split(':');
		trustedOrigins["http://"+host[0]] = '';
	});
	return origin in trustedOrigins;
};

Common.prototype.oc = function(a){
	  var o = {};
	  for(var i=0;i<a.length;i++)
	  {
	    o[a[i]]='';
	  }
	  return o;
	};
	
Common.prototype.getRandomName = function(src) {
	var uniq_id = require('crypto').createHash('md5').update(src + Math.floor(Math.random() * 0x100000000) + (new Date()).getTime()).digest("hex");
	return uniq_id;
};

Common.prototype.addJob = function(uploadFile){
	var src = uploadFile.name;
	var tubeName='';
	var dest=this.getRandomName(src);
	var jobFile = dest +'.php';
	var newName = uploadFile.storagePath+dest+'.'+uploadFile.ext;
	fs.rename(src, newName);
	
	switch(uploadFile.ext){
	case 'pdf':
		tubeName = 'pdf_conversion';
		break;
	case 'ppt':
	case 'pptx':
	case 'odp':
		tubeName = 'ppt_conversion';
		break;
	case 'mpeg':
	case 'mpg':
	case 'mpe':
	case 'mov':
		tubeName = 'video_conversion';
		break;
	default:
		tubeName = 'fs';
		dest += '.'+uploadFile.ext;
	}
	
	var phpFile = fs.createWriteStream(jobFile, {'flags': 'a', encoding: 'utf8', mode: 0666});
	phpFile.write("<?php  require('lib/beanstalk.php');");
	phpFile.write("$beanstalk = new Beanstalk();");
	phpFile.write("$beanstalk->connect();");
	phpFile.write("$beanstalk->useTube('"+tubeName+"');");
	if(tubeName == 'fs'){
		phpFile.write("$data = array('type'=>'move','src'=>'"+newName+"','dest'=>'"+dest+"');");
	}else{
		phpFile.write("$data = array('src'=>'"+newName+"','dest'=>'"+dest+"','del_source'=>true);");
	}
	phpFile.write("$beanstalk->put(0,0,120,json_encode($data));");
	phpFile.write("?>");
	phpFile.end();
	exec("php "+jobFile, function (error, stdout, stderr){
		 fs.unlink(jobFile);
	});
};	