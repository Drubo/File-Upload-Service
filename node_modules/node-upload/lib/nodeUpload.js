
/*!
 * nodeUpload
 * Copyright(c) 2012 Nibs Solution (BD) Ltd. <drubo@nibssolution.com>
 * MIT Licensed
 */

/**
 * Module dependencies.
 */
var httpServer = require('./server');

var allowed_types = "hqx|cpt|csv|bin|dms|lha|lzh|exe|class|psd|";
allowed_types += "so|sea|dll|oda|pdf|ai|eps|ps|smi|smil|mif|xls|ppt|wbxml|wmlc|dcr|dir|dxr|dvi|";
allowed_types += "gtar|gz|js|swf|sit|tar|tgz|xhtml|xht|zip|mid|midi|";
allowed_types += "mpga|mp2|mp3|aif|aiff|aifc|ram|rm|rpm|ra|rv|wav|bmp|gif|";
allowed_types += "jpeg|jpg|jpe|png|tiff|tif|css|html|htm|shtml|txt|text|log|";
allowed_types += "rtx|rtf|xml|xsl|mpeg|mpg|mpe|qt|mov|avi|movie|doc|docx|xlsx|word|xl|eml|odp";

/**
 * Version.
 */
exports.version = '0.0.1';
 
exports.listen = function (host, port, options, fn) {
  if('number' == typeof host) port = host;
  if('object' == typeof host) options = host;
  if('function' == typeof host) fn = host;
  if('object' == typeof port) options = port;
  if('function' == typeof port) fn = port;
  if('function' == typeof options) fn = options;
  
  if('undefined' == typeof host || 'string' != typeof host){
	  //default host set to localhost
	  host = 'localhost';
  }
  
  if('undefined' == typeof port || 'number' != typeof port){
	  //default port set to 12345
	  port = 12345;
  }
  
  this.options = {
      origins: host+':'+port
    , pollingDuration: 20
    , flashPolicyServer: true
    , maxFileSize: 20990000 //20MB
    , chunkSize: 12288
    , allowed_types: allowed_types
  };
  
  
  if('object' == typeof options){
	  for (var i in options) {
		 this.options[i] = options[i];
	  }
  }
  
  var server = new httpServer(host, port, this.options, fn);
  return new exports.Manager(server, this.options);
};

exports.Manager = require('./manager');